C51 COMPILER V9.54   KEY_MATRIX                                                            06/14/2024 03:41:17 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEY_MATRIX
OBJECT MODULE PLACED IN key_matrix.obj
COMPILER INVOKED BY: D:\keil_51\C51\BIN\C51.EXE App\key_matrix\key_matrix.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\key_ma
                    -trix;.\App\lcd1602;.\Public;.\User;.\App\key_fun;.\App\beep) DEBUG OBJECTEXTEND PRINT(.\key_matrix.lst) TABS(2) OBJECT(k
                    -ey_matrix.obj)

line level    source

   1          #include "key_matrix.h"
   2          
   3          
   4          /*******************************************************************************
   5          * 函 数 名       : key_matrix_ranks_scan
   6          * 函数功能     : 使用行列式扫描方法，检测矩阵按键是否按下，按下则返回对应键值
   7          * 输    入       : 无
   8          * 输    出       : key_value：1-16，对应S1-S16键，
   9                     0：按键未按下
  10          *******************************************************************************/
  11          u8 key_matrix_ranks_scan(void)
  12          {
  13   1        u8 key_value=0;
  14   1      
  15   1        P1=0xf7;//给第一列赋值0，其余全为1
  16   1        if(P1!=0xf7)//判断第一列按键是否按下
  17   1        {
  18   2          delay_10us(1000);//消抖
  19   2          switch(P1)//保存第一列按键按下后的键值  
  20   2          {
  21   3            case 0x77: key_value=1;break;
  22   3            case 0xb7: key_value=5;break;
  23   3            case 0xd7: key_value=9;break;
  24   3            case 0xe7: key_value=13;break;
  25   3          }
  26   2        }
  27   1        while(P1!=0xf7);//等待按键松开  
  28   1        
  29   1        P1=0xfb;//给第二列赋值0，其余全为1
  30   1        if(P1!=0xfb)//判断第二列按键是否按下
  31   1        {
  32   2          delay_10us(1000);//消抖
  33   2          switch(P1)//保存第二列按键按下后的键值  
  34   2          {
  35   3            case 0x7b: key_value=2;break;
  36   3            case 0xbb: key_value=6;break;
  37   3            case 0xdb: key_value=10;break;
  38   3            case 0xeb: key_value=14;break;
  39   3          }
  40   2        }
  41   1        while(P1!=0xfb);//等待按键松开  
  42   1        
  43   1        P1=0xfd;//给第三列赋值0，其余全为1
  44   1        if(P1!=0xfd)//判断第三列按键是否按下
  45   1        {
  46   2          delay_10us(1000);//消抖
  47   2          switch(P1)//保存第三列按键按下后的键值  
  48   2          {
  49   3            case 0x7d: key_value=3;break;
  50   3            case 0xbd: key_value=7;break;
  51   3            case 0xdd: key_value=11;break;
  52   3            case 0xed: key_value=15;break;
  53   3          }
C51 COMPILER V9.54   KEY_MATRIX                                                            06/14/2024 03:41:17 PAGE 2   

  54   2        }
  55   1        while(P1!=0xfd);//等待按键松开  
  56   1        
  57   1        P1=0xfe;//给第四列赋值0，其余全为1
  58   1        if(P1!=0xfe)//判断第四列按键是否按下
  59   1        {
  60   2          delay_10us(1000);//消抖
  61   2          switch(P1)//保存第四列按键按下后的键值  
  62   2          {
  63   3            case 0x7e: key_value=4;break;
  64   3            case 0xbe: key_value=8;break;
  65   3            case 0xde: key_value=12;break;
  66   3            case 0xee: key_value=16;break;
  67   3          }
  68   2        }
  69   1        while(P1!=0xfe);//等待按键松开
  70   1        
  71   1        return key_value;   
  72   1      }
  73          
  74          /*******************************************************************************
  75          * 函 数 名       : key_matrix_flip_scan
  76          * 函数功能     : 使用线翻转扫描方法，检测矩阵按键是否按下，按下则返回对应键值
  77          * 输    入       : 无
  78          * 输    出       : key_value：1-16，对应S1-S16键，
  79                     0：按键未按下
  80          *******************************************************************************/
  81          /*
  82          u8 key_matrix_flip_scan(void)
  83          {
  84            static u8 key_value=0;
  85          
  86            P1=0x0f;//给所有行赋值0，列全为1
  87            if(P1!=0x0f)//判断按键是否按下
  88            {
  89              delay_10us(1000);//消抖
  90              if(P1!=0x0f)
  91              {
  92                //测试列
  93                P1=0x0f;
  94                switch(P1)//保存行为0，按键按下后的列值 
  95                {
  96                  case 0x07: key_value=1;break;
  97                  case 0x0b: key_value=2;break;
  98                  case 0x0d: key_value=3;break;
  99                  case 0x0e: key_value=4;break;
 100                }
 101                //测试行
 102                P1=0xf0;
 103                switch(P1)//保存列为0，按键按下后的键值 
 104                {
 105                  case 0x70: key_value=key_value;break;
 106                  case 0xb0: key_value=key_value+4;break;
 107                  case 0xd0: key_value=key_value+8;break;
 108                  case 0xe0: key_value=key_value+12;break;
 109                }
 110                while(P1!=0xf0);//等待按键松开  
 111              }
 112            }
 113            else
 114              key_value=0;    
 115            
C51 COMPILER V9.54   KEY_MATRIX                                                            06/14/2024 03:41:17 PAGE 3   

 116            return key_value;   
 117          }
 118          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
